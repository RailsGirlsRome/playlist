
                   ***     ***
                 **   ** **   **
                *       *       *
                *               *
                 *             *
                  **         **
                    **     **
                      ** **
                        *
     ____       _ _        ____ _      _
    |  _ \ __ _(_) |___   / ___(_)_ __| |___
    | |_) / _` | | / __| | |  _| | '__| / __|
    |  _ < (_| | | \__ \ | |_| | | |  | \__ \
    |_| \_\__,_|_|_|___/  \____|_|_|  |_|___/

---------------------------------------------

== Welcome to the Playlist Rails Girls app!

Work in progress below...

== Setup Devise

rails generate devise:install
rails generate devise User

* add username attribute to User, validating presence and uniqueness
* generate views, add username field to signup form
    rails g devise:views
* remove 'recoverable' devise option since we don't want to deal with email right now.
* remove 'recoverable' columns and indices from migration
* rake db:migrate
* go to /users/sign_up
* run console
    rails c
    User.all

== Create playlist resource

* show all playlists on index
* show single playlist, linked from index

== Create song resource

* add 'paperclip' to gems
* rails g resource song
* add attachment columns to song
     t.attachment :file

== Add Bootstrap
* add bootstrap-sass to Gemfile
* require bootstrap in application.js
* rename application.css to application.css.scss
* add app/assets/stylesheets/bootstrap_and_overrides.css.scss
* @import bootstrap in this new file

== Save songs to Amazon S3
* add aws-sdk to Gemfile
* create config/s3.yml.erb to read credentials from ENV
* configure paperclip in app/models/song.rb
* bucket: rgr13-playlist
* path: virtual machine username

== Pretty URLs
* validate format of username
* define to_param in playlist model
* add constraint to playlist route

== Re-order songs
* add ranked-model to Gemfile
* add jquery-ui-rails
* require jquery.ui.sortable in application.js
* add to songs
* add migration to add row_order to songs
* add update action to songs
* add js to sort table rows

== Push to Heroku
* heroku apps:create rgr13-myplaylist-<developer name>
* bundle exec rake config:heroku:s3
* ssh keygen -t rsa
* heroku keys:add ~/.ssh/id_rsa.pub
* git push heroku master

== IMPROVEMENTS
* rename title of song
* allow only mp3s to be uploaded
* use id3 tags from mp3s
* upload progress
* Javascript to automatically start next song/prevent two songs from playing at once
* order playlists by last update
* paginate playlists
